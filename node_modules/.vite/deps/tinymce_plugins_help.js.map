{
  "version": 3,
  "sources": ["../../tinymce/plugins/help/plugin.js", "../../tinymce/plugins/help/index.js"],
  "sourcesContent": ["/**\n * TinyMCE version 7.2.1 (2024-07-03)\n */\n\n(function () {\n    'use strict';\n\n    const Cell = initial => {\n      let value = initial;\n      const get = () => {\n        return value;\n      };\n      const set = v => {\n        value = v;\n      };\n      return {\n        get,\n        set\n      };\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    let unique = 0;\n    const generate = prefix => {\n      const date = new Date();\n      const time = date.getTime();\n      const random = Math.floor(Math.random() * 1000000000);\n      unique++;\n      return prefix + '_' + random + unique + String(time);\n    };\n\n    const get$1 = customTabs => {\n      const addTab = spec => {\n        var _a;\n        const name = (_a = spec.name) !== null && _a !== void 0 ? _a : generate('tab-name');\n        const currentCustomTabs = customTabs.get();\n        currentCustomTabs[name] = spec;\n        customTabs.set(currentCustomTabs);\n      };\n      return { addTab };\n    };\n\n    const register$2 = (editor, dialogOpener) => {\n      editor.addCommand('mceHelp', dialogOpener);\n    };\n\n    const option = name => editor => editor.options.get(name);\n    const register$1 = editor => {\n      const registerOption = editor.options.register;\n      registerOption('help_tabs', { processor: 'array' });\n    };\n    const getHelpTabs = option('help_tabs');\n    const getForcedPlugins = option('forced_plugins');\n\n    const register = (editor, dialogOpener) => {\n      editor.ui.registry.addButton('help', {\n        icon: 'help',\n        tooltip: 'Help',\n        onAction: dialogOpener\n      });\n      editor.ui.registry.addMenuItem('help', {\n        text: 'Help',\n        icon: 'help',\n        shortcut: 'Alt+0',\n        onAction: dialogOpener\n      });\n    };\n\n    const hasProto = (v, constructor, predicate) => {\n      var _a;\n      if (predicate(v, constructor.prototype)) {\n        return true;\n      } else {\n        return ((_a = v.constructor) === null || _a === void 0 ? void 0 : _a.name) === constructor.name;\n      }\n    };\n    const typeOf = x => {\n      const t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && Array.isArray(x)) {\n        return 'array';\n      } else if (t === 'object' && hasProto(x, String, (o, proto) => proto.isPrototypeOf(o))) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    const isType = type => value => typeOf(value) === type;\n    const isSimpleType = type => value => typeof value === type;\n    const eq = t => a => t === a;\n    const isString = isType('string');\n    const isUndefined = eq(undefined);\n    const isNullable = a => a === null || a === undefined;\n    const isNonNullable = a => !isNullable(a);\n    const isFunction = isSimpleType('function');\n\n    const constant = value => {\n      return () => {\n        return value;\n      };\n    };\n    const never = constant(false);\n\n    class Optional {\n      constructor(tag, value) {\n        this.tag = tag;\n        this.value = value;\n      }\n      static some(value) {\n        return new Optional(true, value);\n      }\n      static none() {\n        return Optional.singletonNone;\n      }\n      fold(onNone, onSome) {\n        if (this.tag) {\n          return onSome(this.value);\n        } else {\n          return onNone();\n        }\n      }\n      isSome() {\n        return this.tag;\n      }\n      isNone() {\n        return !this.tag;\n      }\n      map(mapper) {\n        if (this.tag) {\n          return Optional.some(mapper(this.value));\n        } else {\n          return Optional.none();\n        }\n      }\n      bind(binder) {\n        if (this.tag) {\n          return binder(this.value);\n        } else {\n          return Optional.none();\n        }\n      }\n      exists(predicate) {\n        return this.tag && predicate(this.value);\n      }\n      forall(predicate) {\n        return !this.tag || predicate(this.value);\n      }\n      filter(predicate) {\n        if (!this.tag || predicate(this.value)) {\n          return this;\n        } else {\n          return Optional.none();\n        }\n      }\n      getOr(replacement) {\n        return this.tag ? this.value : replacement;\n      }\n      or(replacement) {\n        return this.tag ? this : replacement;\n      }\n      getOrThunk(thunk) {\n        return this.tag ? this.value : thunk();\n      }\n      orThunk(thunk) {\n        return this.tag ? this : thunk();\n      }\n      getOrDie(message) {\n        if (!this.tag) {\n          throw new Error(message !== null && message !== void 0 ? message : 'Called getOrDie on None');\n        } else {\n          return this.value;\n        }\n      }\n      static from(value) {\n        return isNonNullable(value) ? Optional.some(value) : Optional.none();\n      }\n      getOrNull() {\n        return this.tag ? this.value : null;\n      }\n      getOrUndefined() {\n        return this.value;\n      }\n      each(worker) {\n        if (this.tag) {\n          worker(this.value);\n        }\n      }\n      toArray() {\n        return this.tag ? [this.value] : [];\n      }\n      toString() {\n        return this.tag ? `some(${ this.value })` : 'none()';\n      }\n    }\n    Optional.singletonNone = new Optional(false);\n\n    const nativeSlice = Array.prototype.slice;\n    const nativeIndexOf = Array.prototype.indexOf;\n    const rawIndexOf = (ts, t) => nativeIndexOf.call(ts, t);\n    const contains = (xs, x) => rawIndexOf(xs, x) > -1;\n    const map = (xs, f) => {\n      const len = xs.length;\n      const r = new Array(len);\n      for (let i = 0; i < len; i++) {\n        const x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    const filter = (xs, pred) => {\n      const r = [];\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    const findUntil = (xs, pred, until) => {\n      for (let i = 0, len = xs.length; i < len; i++) {\n        const x = xs[i];\n        if (pred(x, i)) {\n          return Optional.some(x);\n        } else if (until(x, i)) {\n          break;\n        }\n      }\n      return Optional.none();\n    };\n    const find = (xs, pred) => {\n      return findUntil(xs, pred, never);\n    };\n    const sort = (xs, comparator) => {\n      const copy = nativeSlice.call(xs, 0);\n      copy.sort(comparator);\n      return copy;\n    };\n\n    const keys = Object.keys;\n    const hasOwnProperty = Object.hasOwnProperty;\n    const get = (obj, key) => {\n      return has(obj, key) ? Optional.from(obj[key]) : Optional.none();\n    };\n    const has = (obj, key) => hasOwnProperty.call(obj, key);\n\n    const cat = arr => {\n      const r = [];\n      const push = x => {\n        r.push(x);\n      };\n      for (let i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.I18n');\n\n    const pLoadHtmlByLangCode = (baseUrl, langCode) => global$3.load(`tinymce.html-i18n.help-keynav.${ langCode }`, `${ baseUrl }/js/i18n/keynav/${ langCode }.js`);\n    const pLoadI18nHtml = baseUrl => pLoadHtmlByLangCode(baseUrl, global$2.getCode()).catch(() => pLoadHtmlByLangCode(baseUrl, 'en'));\n    const initI18nLoad = (editor, baseUrl) => {\n      editor.on('init', () => {\n        pLoadI18nHtml(baseUrl);\n      });\n    };\n\n    const pTab = async pluginUrl => {\n      const body = {\n        type: 'htmlpanel',\n        presets: 'document',\n        html: await pLoadI18nHtml(pluginUrl)\n      };\n      return {\n        name: 'keyboardnav',\n        title: 'Keyboard Navigation',\n        items: [body]\n      };\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    const convertText = source => {\n      const isMac = global$1.os.isMacOS() || global$1.os.isiOS();\n      const mac = {\n        alt: '&#x2325;',\n        ctrl: '&#x2303;',\n        shift: '&#x21E7;',\n        meta: '&#x2318;',\n        access: '&#x2303;&#x2325;'\n      };\n      const other = {\n        meta: 'Ctrl ',\n        access: 'Shift + Alt '\n      };\n      const replace = isMac ? mac : other;\n      const shortcut = source.split('+');\n      const updated = map(shortcut, segment => {\n        const search = segment.toLowerCase().trim();\n        return has(replace, search) ? replace[search] : segment;\n      });\n      return isMac ? updated.join('').replace(/\\s/, '') : updated.join('+');\n    };\n\n    const shortcuts = [\n      {\n        shortcuts: ['Meta + B'],\n        action: 'Bold'\n      },\n      {\n        shortcuts: ['Meta + I'],\n        action: 'Italic'\n      },\n      {\n        shortcuts: ['Meta + U'],\n        action: 'Underline'\n      },\n      {\n        shortcuts: ['Meta + A'],\n        action: 'Select all'\n      },\n      {\n        shortcuts: [\n          'Meta + Y',\n          'Meta + Shift + Z'\n        ],\n        action: 'Redo'\n      },\n      {\n        shortcuts: ['Meta + Z'],\n        action: 'Undo'\n      },\n      {\n        shortcuts: ['Access + 1'],\n        action: 'Heading 1'\n      },\n      {\n        shortcuts: ['Access + 2'],\n        action: 'Heading 2'\n      },\n      {\n        shortcuts: ['Access + 3'],\n        action: 'Heading 3'\n      },\n      {\n        shortcuts: ['Access + 4'],\n        action: 'Heading 4'\n      },\n      {\n        shortcuts: ['Access + 5'],\n        action: 'Heading 5'\n      },\n      {\n        shortcuts: ['Access + 6'],\n        action: 'Heading 6'\n      },\n      {\n        shortcuts: ['Access + 7'],\n        action: 'Paragraph'\n      },\n      {\n        shortcuts: ['Access + 8'],\n        action: 'Div'\n      },\n      {\n        shortcuts: ['Access + 9'],\n        action: 'Address'\n      },\n      {\n        shortcuts: ['Alt + 0'],\n        action: 'Open help dialog'\n      },\n      {\n        shortcuts: ['Alt + F9'],\n        action: 'Focus to menubar'\n      },\n      {\n        shortcuts: ['Alt + F10'],\n        action: 'Focus to toolbar'\n      },\n      {\n        shortcuts: ['Alt + F11'],\n        action: 'Focus to element path'\n      },\n      {\n        shortcuts: ['Alt + F12'],\n        action: 'Focus to notification'\n      },\n      {\n        shortcuts: ['Ctrl + F9'],\n        action: 'Focus to contextual toolbar'\n      },\n      {\n        shortcuts: ['Shift + Enter'],\n        action: 'Open popup menu for split buttons'\n      },\n      {\n        shortcuts: ['Meta + K'],\n        action: 'Insert link (if link plugin activated)'\n      },\n      {\n        shortcuts: ['Meta + S'],\n        action: 'Save (if save plugin activated)'\n      },\n      {\n        shortcuts: ['Meta + F'],\n        action: 'Find (if searchreplace plugin activated)'\n      },\n      {\n        shortcuts: ['Meta + Shift + F'],\n        action: 'Switch to or from fullscreen mode'\n      }\n    ];\n\n    const tab$2 = () => {\n      const shortcutList = map(shortcuts, shortcut => {\n        const shortcutText = map(shortcut.shortcuts, convertText).join(' or ');\n        return [\n          shortcut.action,\n          shortcutText\n        ];\n      });\n      const tablePanel = {\n        type: 'table',\n        header: [\n          'Action',\n          'Shortcut'\n        ],\n        cells: shortcutList\n      };\n      return {\n        name: 'shortcuts',\n        title: 'Handy Shortcuts',\n        items: [tablePanel]\n      };\n    };\n\n    const urls = map([\n      {\n        key: 'accordion',\n        name: 'Accordion'\n      },\n      {\n        key: 'anchor',\n        name: 'Anchor'\n      },\n      {\n        key: 'autolink',\n        name: 'Autolink'\n      },\n      {\n        key: 'autoresize',\n        name: 'Autoresize'\n      },\n      {\n        key: 'autosave',\n        name: 'Autosave'\n      },\n      {\n        key: 'charmap',\n        name: 'Character Map'\n      },\n      {\n        key: 'code',\n        name: 'Code'\n      },\n      {\n        key: 'codesample',\n        name: 'Code Sample'\n      },\n      {\n        key: 'colorpicker',\n        name: 'Color Picker'\n      },\n      {\n        key: 'directionality',\n        name: 'Directionality'\n      },\n      {\n        key: 'emoticons',\n        name: 'Emoticons'\n      },\n      {\n        key: 'fullscreen',\n        name: 'Full Screen'\n      },\n      {\n        key: 'help',\n        name: 'Help'\n      },\n      {\n        key: 'image',\n        name: 'Image'\n      },\n      {\n        key: 'importcss',\n        name: 'Import CSS'\n      },\n      {\n        key: 'insertdatetime',\n        name: 'Insert Date/Time'\n      },\n      {\n        key: 'link',\n        name: 'Link'\n      },\n      {\n        key: 'lists',\n        name: 'Lists'\n      },\n      {\n        key: 'advlist',\n        name: 'List Styles'\n      },\n      {\n        key: 'media',\n        name: 'Media'\n      },\n      {\n        key: 'nonbreaking',\n        name: 'Nonbreaking'\n      },\n      {\n        key: 'pagebreak',\n        name: 'Page Break'\n      },\n      {\n        key: 'preview',\n        name: 'Preview'\n      },\n      {\n        key: 'quickbars',\n        name: 'Quick Toolbars'\n      },\n      {\n        key: 'save',\n        name: 'Save'\n      },\n      {\n        key: 'searchreplace',\n        name: 'Search and Replace'\n      },\n      {\n        key: 'table',\n        name: 'Table'\n      },\n      {\n        key: 'textcolor',\n        name: 'Text Color'\n      },\n      {\n        key: 'visualblocks',\n        name: 'Visual Blocks'\n      },\n      {\n        key: 'visualchars',\n        name: 'Visual Characters'\n      },\n      {\n        key: 'wordcount',\n        name: 'Word Count'\n      },\n      {\n        key: 'a11ychecker',\n        name: 'Accessibility Checker',\n        type: 'premium'\n      },\n      {\n        key: 'typography',\n        name: 'Advanced Typography',\n        type: 'premium',\n        slug: 'advanced-typography'\n      },\n      {\n        key: 'ai',\n        name: 'AI Assistant',\n        type: 'premium'\n      },\n      {\n        key: 'casechange',\n        name: 'Case Change',\n        type: 'premium'\n      },\n      {\n        key: 'checklist',\n        name: 'Checklist',\n        type: 'premium'\n      },\n      {\n        key: 'advcode',\n        name: 'Enhanced Code Editor',\n        type: 'premium'\n      },\n      {\n        key: 'mediaembed',\n        name: 'Enhanced Media Embed',\n        type: 'premium',\n        slug: 'introduction-to-mediaembed'\n      },\n      {\n        key: 'advtable',\n        name: 'Enhanced Tables',\n        type: 'premium'\n      },\n      {\n        key: 'exportpdf',\n        name: 'Export to PDF',\n        type: 'premium'\n      },\n      {\n        key: 'exportword',\n        name: 'Export to Word',\n        type: 'premium'\n      },\n      {\n        key: 'footnotes',\n        name: 'Footnotes',\n        type: 'premium'\n      },\n      {\n        key: 'formatpainter',\n        name: 'Format Painter',\n        type: 'premium'\n      },\n      {\n        key: 'editimage',\n        name: 'Image Editing',\n        type: 'premium'\n      },\n      {\n        key: 'importword',\n        name: 'Import from Word',\n        type: 'premium'\n      },\n      {\n        key: 'inlinecss',\n        name: 'Inline CSS',\n        type: 'premium',\n        slug: 'inline-css'\n      },\n      {\n        key: 'linkchecker',\n        name: 'Link Checker',\n        type: 'premium'\n      },\n      {\n        key: 'math',\n        name: 'Math',\n        type: 'premium'\n      },\n      {\n        key: 'markdown',\n        name: 'Markdown',\n        type: 'premium'\n      },\n      {\n        key: 'mentions',\n        name: 'Mentions',\n        type: 'premium'\n      },\n      {\n        key: 'mergetags',\n        name: 'Merge Tags',\n        type: 'premium'\n      },\n      {\n        key: 'pageembed',\n        name: 'Page Embed',\n        type: 'premium'\n      },\n      {\n        key: 'permanentpen',\n        name: 'Permanent Pen',\n        type: 'premium'\n      },\n      {\n        key: 'powerpaste',\n        name: 'PowerPaste',\n        type: 'premium',\n        slug: 'introduction-to-powerpaste'\n      },\n      {\n        key: 'revisionhistory',\n        name: 'Revision History',\n        type: 'premium'\n      },\n      {\n        key: 'tinymcespellchecker',\n        name: 'Spell Checker',\n        type: 'premium',\n        slug: 'introduction-to-tiny-spellchecker'\n      },\n      {\n        key: 'autocorrect',\n        name: 'Spelling Autocorrect',\n        type: 'premium'\n      },\n      {\n        key: 'tableofcontents',\n        name: 'Table of Contents',\n        type: 'premium'\n      },\n      {\n        key: 'advtemplate',\n        name: 'Templates',\n        type: 'premium',\n        slug: 'advanced-templates'\n      },\n      {\n        key: 'tinycomments',\n        name: 'Tiny Comments',\n        type: 'premium',\n        slug: 'introduction-to-tiny-comments'\n      },\n      {\n        key: 'tinydrive',\n        name: 'Tiny Drive',\n        type: 'premium',\n        slug: 'tinydrive-introduction'\n      }\n    ], item => ({\n      ...item,\n      type: item.type || 'opensource',\n      slug: item.slug || item.key\n    }));\n\n    const tab$1 = editor => {\n      const availablePlugins = () => {\n        const premiumPlugins = filter(urls, ({type}) => {\n          return type === 'premium';\n        });\n        const sortedPremiumPlugins = sort(map(premiumPlugins, p => p.name), (s1, s2) => s1.localeCompare(s2));\n        const premiumPluginList = map(sortedPremiumPlugins, pluginName => `<li>${ pluginName }</li>`).join('');\n        return '<div>' + '<p><b>' + global$2.translate('Premium plugins:') + '</b></p>' + '<ul>' + premiumPluginList + '<li class=\"tox-help__more-link\" \">' + '<a href=\"https://www.tiny.cloud/pricing/?utm_campaign=help_dialog_plugin_tab&utm_source=tiny&utm_medium=referral&utm_term=read_more&utm_content=premium_plugin_heading\" rel=\"noopener\" target=\"_blank\"' + ' data-alloy-tabstop=\"true\" tabindex=\"-1\">' + global$2.translate('Learn more...') + '</a></li>' + '</ul>' + '</div>';\n      };\n      const makeLink = p => `<a data-alloy-tabstop=\"true\" tabindex=\"-1\" href=\"${ p.url }\" target=\"_blank\" rel=\"noopener\">${ p.name }</a>`;\n      const identifyUnknownPlugin = (editor, key) => {\n        const getMetadata = editor.plugins[key].getMetadata;\n        if (isFunction(getMetadata)) {\n          const metadata = getMetadata();\n          return {\n            name: metadata.name,\n            html: makeLink(metadata)\n          };\n        } else {\n          return {\n            name: key,\n            html: key\n          };\n        }\n      };\n      const getPluginData = (editor, key) => find(urls, x => {\n        return x.key === key;\n      }).fold(() => {\n        return identifyUnknownPlugin(editor, key);\n      }, x => {\n        const name = x.type === 'premium' ? `${ x.name }*` : x.name;\n        const html = makeLink({\n          name,\n          url: `https://www.tiny.cloud/docs/tinymce/7/${ x.slug }/`\n        });\n        return {\n          name,\n          html\n        };\n      });\n      const getPluginKeys = editor => {\n        const keys$1 = keys(editor.plugins);\n        const forcedPlugins = getForcedPlugins(editor);\n        return isUndefined(forcedPlugins) ? keys$1 : filter(keys$1, k => !contains(forcedPlugins, k));\n      };\n      const pluginLister = editor => {\n        const pluginKeys = getPluginKeys(editor);\n        const sortedPluginData = sort(map(pluginKeys, k => getPluginData(editor, k)), (pd1, pd2) => pd1.name.localeCompare(pd2.name));\n        const pluginLis = map(sortedPluginData, key => {\n          return '<li>' + key.html + '</li>';\n        });\n        const count = pluginLis.length;\n        const pluginsString = pluginLis.join('');\n        const html = '<p><b>' + global$2.translate([\n          'Plugins installed ({0}):',\n          count\n        ]) + '</b></p>' + '<ul>' + pluginsString + '</ul>';\n        return html;\n      };\n      const installedPlugins = editor => {\n        if (editor == null) {\n          return '';\n        }\n        return '<div>' + pluginLister(editor) + '</div>';\n      };\n      const htmlPanel = {\n        type: 'htmlpanel',\n        presets: 'document',\n        html: [\n          installedPlugins(editor),\n          availablePlugins()\n        ].join('')\n      };\n      return {\n        name: 'plugins',\n        title: 'Plugins',\n        items: [htmlPanel]\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    const tab = () => {\n      const getVersion = (major, minor) => major.indexOf('@') === 0 ? 'X.X.X' : major + '.' + minor;\n      const version = getVersion(global.majorVersion, global.minorVersion);\n      const changeLogLink = '<a data-alloy-tabstop=\"true\" tabindex=\"-1\" href=\"https://www.tiny.cloud/docs/tinymce/7/changelog/?utm_campaign=help_dialog_version_tab&utm_source=tiny&utm_medium=referral\" rel=\"noopener\" target=\"_blank\">TinyMCE ' + version + '</a>';\n      const htmlPanel = {\n        type: 'htmlpanel',\n        html: '<p>' + global$2.translate([\n          'You are using {0}',\n          changeLogLink\n        ]) + '</p>',\n        presets: 'document'\n      };\n      return {\n        name: 'versions',\n        title: 'Version',\n        items: [htmlPanel]\n      };\n    };\n\n    const parseHelpTabsSetting = (tabsFromSettings, tabs) => {\n      const newTabs = {};\n      const names = map(tabsFromSettings, t => {\n        var _a;\n        if (isString(t)) {\n          if (has(tabs, t)) {\n            newTabs[t] = tabs[t];\n          }\n          return t;\n        } else {\n          const name = (_a = t.name) !== null && _a !== void 0 ? _a : generate('tab-name');\n          newTabs[name] = t;\n          return name;\n        }\n      });\n      return {\n        tabs: newTabs,\n        names\n      };\n    };\n    const getNamesFromTabs = tabs => {\n      const names = keys(tabs);\n      const idx = names.indexOf('versions');\n      if (idx !== -1) {\n        names.splice(idx, 1);\n        names.push('versions');\n      }\n      return {\n        tabs,\n        names\n      };\n    };\n    const pParseCustomTabs = async (editor, customTabs, pluginUrl) => {\n      const shortcuts = tab$2();\n      const nav = await pTab(pluginUrl);\n      const plugins = tab$1(editor);\n      const versions = tab();\n      const tabs = {\n        [shortcuts.name]: shortcuts,\n        [nav.name]: nav,\n        [plugins.name]: plugins,\n        [versions.name]: versions,\n        ...customTabs.get()\n      };\n      return Optional.from(getHelpTabs(editor)).fold(() => getNamesFromTabs(tabs), tabsFromSettings => parseHelpTabsSetting(tabsFromSettings, tabs));\n    };\n    const init = (editor, customTabs, pluginUrl) => () => {\n      pParseCustomTabs(editor, customTabs, pluginUrl).then(({tabs, names}) => {\n        const foundTabs = map(names, name => get(tabs, name));\n        const dialogTabs = cat(foundTabs);\n        const body = {\n          type: 'tabpanel',\n          tabs: dialogTabs\n        };\n        editor.windowManager.open({\n          title: 'Help',\n          size: 'medium',\n          body,\n          buttons: [{\n              type: 'cancel',\n              name: 'close',\n              text: 'Close',\n              primary: true\n            }],\n          initialData: {}\n        });\n      });\n    };\n\n    var Plugin = () => {\n      global$4.add('help', (editor, pluginUrl) => {\n        const customTabs = Cell({});\n        const api = get$1(customTabs);\n        register$1(editor);\n        const dialogOpener = init(editor, customTabs, pluginUrl);\n        register(editor, dialogOpener);\n        register$2(editor, dialogOpener);\n        editor.shortcuts.add('Alt+0', 'Open help dialog', 'mceHelp');\n        initI18nLoad(editor, pluginUrl);\n        return api;\n      });\n    };\n\n    Plugin();\n\n})();\n", "// Exports the \"help\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/help')\n//   ES2015:\n//     import 'tinymce/plugins/help'\nrequire('./plugin.js');"],
  "mappings": "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ACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,MAAM;A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",
  "names": ["get", "editor", "shortcuts"]
}
